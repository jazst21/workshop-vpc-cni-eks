apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: eks-vpc-cni-eksctl-1
  region: us-west-2
  version: "1.24"

iam:
  withOIDC: true

addons:
- name: vpc-cni
  configurationValues: "{
                          "AWS_VPC_K8S_CNI_CUSTOM_NETWORK_CFG":"true",
                          "WARM_PREFIX_TARGET":"1",
                          "AWS_VPC_K8S_CNI_EXTERNALSNAT":"true",
                          "DISABLE_METRICS":"false"
                          }"
  resolveConflicts: overwrite
  # version: 1.10 # update to 1.10
  # # attachPolicyARNs: #optional
  # # - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
  # serviceAccountRoleARN: arn:aws:iam::aws:policy/AmazonEKSCNIAccess # optional
  # tags: # optional
  #   team: eks
  # attachPolicy: # optional
  #   Statement:
  #   - Effect: Allow
  #     Action:
  #     - ec2:AssignPrivateIpAddresses
  #     - ec2:AttachNetworkInterface
  #     - ec2:CreateNetworkInterface
  #     - ec2:DeleteNetworkInterface
  #     - ec2:DescribeInstances
  #     - ec2:DescribeTags
  #     - ec2:DescribeNetworkInterfaces
  #     - ec2:DescribeInstanceTypes
  #     - ec2:DetachNetworkInterface
  #     - ec2:ModifyNetworkInterfaceAttribute
  #     - ec2:UnassignPrivateIpAddresses
  #     Resource: '*'

vpc:
  clusterEndpoints:
    publicAccess:  true
    privateAccess: true
  nat:
    gateway: Single # other options: Disable, Single (default)

managedNodeGroups:
- name: m1
  instanceType: m5.large
  desiredCapacity: 2
  privateNetworking: true
  maxPodsPerNode: 110
  # resolveConflicts: preserve
  # ssh: # enable SSH using SSM
  #   enableSsm: true